
pwm.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000006c  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000027e  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  0000027e  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 00000054  00000000  00000000  000002ad  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000040  00000000  00000000  00000301  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009fd  00000000  00000000  00000341  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000662  00000000  00000000  00000d3e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000029d  00000000  00000000  000013a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000064  00000000  00000000  00001640  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001af  00000000  00000000  000016a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000148  00000000  00000000  00001853  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  0000199b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  000001fc  000001fc  00000270  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000019cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.freq    00000028  00000120  00000120  00000194  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.pwm_init 0000001a  00000198  00000198  0000020c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.set_duty 0000000a  000001f2  000001f2  00000266  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.pwm_proc 0000001a  000001b2  000001b2  00000226  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.main    00000042  000000b0  000000b0  00000124  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.libgcc.div 00000028  00000148  00000148  000001bc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.libgcc.div 0000002e  000000f2  000000f2  00000166  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.libgcc.div 00000010  000001e2  000001e2  00000256  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.libgcc.div 00000028  00000170  00000170  000001e4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.libgcc.div 00000044  0000006c  0000006c  000000e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.__dummy_fini 00000002  00000204  00000204  00000278  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text.__dummy_funcs_on_exit 00000002  00000206  00000206  0000027a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .text.__dummy_simulator_exit 00000002  00000208  00000208  0000027c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.exit    00000016  000001cc  000001cc  00000240  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text._Exit   00000004  00000200  00000200  00000274  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
   8:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
   c:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
  10:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
  14:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
  18:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
  1c:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
  20:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
  24:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
  28:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
  2c:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
  30:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
  34:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
  38:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
  3c:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
  40:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
  44:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
  48:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
  4c:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>
  50:	0c 94 fe 00 	jmp	0x1fc	; 0x1fc <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 58 00 	call	0xb0	; 0xb0 <main>
  64:	0c 94 e6 00 	jmp	0x1cc	; 0x1cc <exit>

00000068 <_exit>:
  68:	f8 94       	cli

0000006a <__stop_program>:
  6a:	ff cf       	rjmp	.-2      	; 0x6a <__stop_program>

Disassembly of section .text:

000001fc <__bad_interrupt>:
 1fc:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.freq:

00000120 <freq>:


static uint16_t freq(uint16_t f_pwm,  uint16_t prescaler)
{

	uint16_t result = (F_CPU/(prescaler * (f_pwm)) - 1);
 120:	9c 01       	movw	r18, r24
 122:	62 9f       	mul	r22, r18
 124:	c0 01       	movw	r24, r0
 126:	63 9f       	mul	r22, r19
 128:	90 0d       	add	r25, r0
 12a:	72 9f       	mul	r23, r18
 12c:	90 0d       	add	r25, r0
 12e:	11 24       	eor	r1, r1
 130:	9c 01       	movw	r18, r24
 132:	40 e0       	ldi	r20, 0x00	; 0
 134:	50 e0       	ldi	r21, 0x00	; 0
 136:	60 e0       	ldi	r22, 0x00	; 0
 138:	72 e1       	ldi	r23, 0x12	; 18
 13a:	8a e7       	ldi	r24, 0x7A	; 122
 13c:	90 e0       	ldi	r25, 0x00	; 0
 13e:	0e 94 79 00 	call	0xf2	; 0xf2 <__divmodsi4>
	return result;

}
 142:	c9 01       	movw	r24, r18
 144:	01 97       	sbiw	r24, 0x01	; 1
 146:	08 95       	ret

Disassembly of section .text.pwm_init:

00000198 <pwm_init>:


void pwm_init(uint16_t top)
{
 198:	9c 01       	movw	r18, r24

	DDRD|= (1<<PD5)|(1<<PD4);
 19a:	91 b3       	in	r25, 0x11	; 17
 19c:	90 63       	ori	r25, 0x30	; 48
 19e:	91 bb       	out	0x11, r25	; 17

	TCNT1 = 0;
 1a0:	1d bc       	out	0x2d, r1	; 45
 1a2:	1c bc       	out	0x2c, r1	; 44
	TCCR1A = (1 << COM1A1) | (1 << COM1B1)| (1 << WGM11);
 1a4:	82 ea       	ldi	r24, 0xA2	; 162
 1a6:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = (1 << WGM13) | (1 << WGM12)|(1<<CS11);
 1a8:	8a e1       	ldi	r24, 0x1A	; 26
 1aa:	8e bd       	out	0x2e, r24	; 46
	ICR1 = top;
 1ac:	37 bd       	out	0x27, r19	; 39
 1ae:	26 bd       	out	0x26, r18	; 38
 1b0:	08 95       	ret

Disassembly of section .text.set_duty:

000001f2 <set_duty>:
}

void set_duty(uint16_t A,uint16_t B)
{

	OCR1A = A;
 1f2:	9b bd       	out	0x2b, r25	; 43
 1f4:	8a bd       	out	0x2a, r24	; 42
	OCR1B = B;
 1f6:	79 bd       	out	0x29, r23	; 41
 1f8:	68 bd       	out	0x28, r22	; 40
 1fa:	08 95       	ret

Disassembly of section .text.pwm_proc:

000001b2 <pwm_proc>:


int pwm_proc(int p) //Проценты в число
{
	unsigned int result;
	result = (p*255)/100;
 1b2:	2f ef       	ldi	r18, 0xFF	; 255
 1b4:	ac 01       	movw	r20, r24
 1b6:	24 9f       	mul	r18, r20
 1b8:	c0 01       	movw	r24, r0
 1ba:	25 9f       	mul	r18, r21
 1bc:	90 0d       	add	r25, r0
 1be:	11 24       	eor	r1, r1
 1c0:	64 e6       	ldi	r22, 0x64	; 100
 1c2:	70 e0       	ldi	r23, 0x00	; 0
 1c4:	0e 94 a4 00 	call	0x148	; 0x148 <__divmodhi4>
 1c8:	cb 01       	movw	r24, r22
	return	result;
}
 1ca:	08 95       	ret

Disassembly of section .text.main:

000000b0 <main>:


int main(void)
{

	uint16_t top = freq(4000,8);
  b0:	68 e0       	ldi	r22, 0x08	; 8
  b2:	70 e0       	ldi	r23, 0x00	; 0
  b4:	80 ea       	ldi	r24, 0xA0	; 160
  b6:	9f e0       	ldi	r25, 0x0F	; 15
  b8:	0e 94 90 00 	call	0x120	; 0x120 <freq>
	pwm_init(top);
  bc:	0e 94 cc 00 	call	0x198	; 0x198 <pwm_init>

	

int i = 10;
  c0:	ca e0       	ldi	r28, 0x0A	; 10
  c2:	d0 e0       	ldi	r29, 0x00	; 0
  c4:	02 c0       	rjmp	.+4      	; 0xca <main+0x1a>
			set_duty(dt1,dt2);
			_delay_ms(1000);
			
			i= i +10;
		if (i>100)
		{i = 0;
  c6:	c0 e0       	ldi	r28, 0x00	; 0
  c8:	d0 e0       	ldi	r29, 0x00	; 0
int i = 10;
	while (1)
	{
		
	
			uint16_t dt1 = pwm_proc(i);
  ca:	ce 01       	movw	r24, r28
  cc:	0e 94 d9 00 	call	0x1b2	; 0x1b2 <pwm_proc>
			uint16_t dt2 =	pwm_proc(i);
			set_duty(dt1,dt2);
  d0:	bc 01       	movw	r22, r24
  d2:	0e 94 f9 00 	call	0x1f2	; 0x1f2 <set_duty>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  d6:	2f ef       	ldi	r18, 0xFF	; 255
  d8:	89 e6       	ldi	r24, 0x69	; 105
  da:	98 e1       	ldi	r25, 0x18	; 24
  dc:	21 50       	subi	r18, 0x01	; 1
  de:	80 40       	sbci	r24, 0x00	; 0
  e0:	90 40       	sbci	r25, 0x00	; 0
  e2:	e1 f7       	brne	.-8      	; 0xdc <main+0x2c>
  e4:	00 c0       	rjmp	.+0      	; 0xe6 <main+0x36>
  e6:	00 00       	nop
			_delay_ms(1000);
			
			i= i +10;
  e8:	2a 96       	adiw	r28, 0x0a	; 10
		if (i>100)
  ea:	c5 36       	cpi	r28, 0x65	; 101
  ec:	d1 05       	cpc	r29, r1
  ee:	5c f7       	brge	.-42     	; 0xc6 <main+0x16>
  f0:	ec cf       	rjmp	.-40     	; 0xca <main+0x1a>

Disassembly of section .text.libgcc.div:

00000148 <__divmodhi4>:
 148:	97 fb       	bst	r25, 7
 14a:	07 2e       	mov	r0, r23
 14c:	16 f4       	brtc	.+4      	; 0x152 <__divmodhi4+0xa>
 14e:	00 94       	com	r0
 150:	07 d0       	rcall	.+14     	; 0x160 <__divmodhi4_neg1>
 152:	77 fd       	sbrc	r23, 7
 154:	09 d0       	rcall	.+18     	; 0x168 <__divmodhi4_neg2>
 156:	0e 94 b8 00 	call	0x170	; 0x170 <__udivmodhi4>
 15a:	07 fc       	sbrc	r0, 7
 15c:	05 d0       	rcall	.+10     	; 0x168 <__divmodhi4_neg2>
 15e:	3e f4       	brtc	.+14     	; 0x16e <__divmodhi4_exit>

00000160 <__divmodhi4_neg1>:
 160:	90 95       	com	r25
 162:	81 95       	neg	r24
 164:	9f 4f       	sbci	r25, 0xFF	; 255
 166:	08 95       	ret

00000168 <__divmodhi4_neg2>:
 168:	70 95       	com	r23
 16a:	61 95       	neg	r22
 16c:	7f 4f       	sbci	r23, 0xFF	; 255

0000016e <__divmodhi4_exit>:
 16e:	08 95       	ret

Disassembly of section .text.libgcc.div:

000000f2 <__divmodsi4>:
  f2:	05 2e       	mov	r0, r21
  f4:	97 fb       	bst	r25, 7
  f6:	1e f4       	brtc	.+6      	; 0xfe <__divmodsi4+0xc>
  f8:	00 94       	com	r0
  fa:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <__negsi2>
  fe:	57 fd       	sbrc	r21, 7
 100:	07 d0       	rcall	.+14     	; 0x110 <__divmodsi4_neg2>
 102:	0e 94 36 00 	call	0x6c	; 0x6c <__data_load_end>
 106:	07 fc       	sbrc	r0, 7
 108:	03 d0       	rcall	.+6      	; 0x110 <__divmodsi4_neg2>
 10a:	4e f4       	brtc	.+18     	; 0x11e <__divmodsi4_exit>
 10c:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__negsi2>

00000110 <__divmodsi4_neg2>:
 110:	50 95       	com	r21
 112:	40 95       	com	r20
 114:	30 95       	com	r19
 116:	21 95       	neg	r18
 118:	3f 4f       	sbci	r19, 0xFF	; 255
 11a:	4f 4f       	sbci	r20, 0xFF	; 255
 11c:	5f 4f       	sbci	r21, 0xFF	; 255

0000011e <__divmodsi4_exit>:
 11e:	08 95       	ret

Disassembly of section .text.libgcc.div:

000001e2 <__negsi2>:
 1e2:	90 95       	com	r25
 1e4:	80 95       	com	r24
 1e6:	70 95       	com	r23
 1e8:	61 95       	neg	r22
 1ea:	7f 4f       	sbci	r23, 0xFF	; 255
 1ec:	8f 4f       	sbci	r24, 0xFF	; 255
 1ee:	9f 4f       	sbci	r25, 0xFF	; 255
 1f0:	08 95       	ret

Disassembly of section .text.libgcc.div:

00000170 <__udivmodhi4>:
 170:	aa 1b       	sub	r26, r26
 172:	bb 1b       	sub	r27, r27
 174:	51 e1       	ldi	r21, 0x11	; 17
 176:	07 c0       	rjmp	.+14     	; 0x186 <__udivmodhi4_ep>

00000178 <__udivmodhi4_loop>:
 178:	aa 1f       	adc	r26, r26
 17a:	bb 1f       	adc	r27, r27
 17c:	a6 17       	cp	r26, r22
 17e:	b7 07       	cpc	r27, r23
 180:	10 f0       	brcs	.+4      	; 0x186 <__udivmodhi4_ep>
 182:	a6 1b       	sub	r26, r22
 184:	b7 0b       	sbc	r27, r23

00000186 <__udivmodhi4_ep>:
 186:	88 1f       	adc	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	5a 95       	dec	r21
 18c:	a9 f7       	brne	.-22     	; 0x178 <__udivmodhi4_loop>
 18e:	80 95       	com	r24
 190:	90 95       	com	r25
 192:	bc 01       	movw	r22, r24
 194:	cd 01       	movw	r24, r26
 196:	08 95       	ret

Disassembly of section .text.libgcc.div:

0000006c <__udivmodsi4>:
  6c:	a1 e2       	ldi	r26, 0x21	; 33
  6e:	1a 2e       	mov	r1, r26
  70:	aa 1b       	sub	r26, r26
  72:	bb 1b       	sub	r27, r27
  74:	fd 01       	movw	r30, r26
  76:	0d c0       	rjmp	.+26     	; 0x92 <__udivmodsi4_ep>

00000078 <__udivmodsi4_loop>:
  78:	aa 1f       	adc	r26, r26
  7a:	bb 1f       	adc	r27, r27
  7c:	ee 1f       	adc	r30, r30
  7e:	ff 1f       	adc	r31, r31
  80:	a2 17       	cp	r26, r18
  82:	b3 07       	cpc	r27, r19
  84:	e4 07       	cpc	r30, r20
  86:	f5 07       	cpc	r31, r21
  88:	20 f0       	brcs	.+8      	; 0x92 <__udivmodsi4_ep>
  8a:	a2 1b       	sub	r26, r18
  8c:	b3 0b       	sbc	r27, r19
  8e:	e4 0b       	sbc	r30, r20
  90:	f5 0b       	sbc	r31, r21

00000092 <__udivmodsi4_ep>:
  92:	66 1f       	adc	r22, r22
  94:	77 1f       	adc	r23, r23
  96:	88 1f       	adc	r24, r24
  98:	99 1f       	adc	r25, r25
  9a:	1a 94       	dec	r1
  9c:	69 f7       	brne	.-38     	; 0x78 <__udivmodsi4_loop>
  9e:	60 95       	com	r22
  a0:	70 95       	com	r23
  a2:	80 95       	com	r24
  a4:	90 95       	com	r25
  a6:	9b 01       	movw	r18, r22
  a8:	ac 01       	movw	r20, r24
  aa:	bd 01       	movw	r22, r26
  ac:	cf 01       	movw	r24, r30
  ae:	08 95       	ret

Disassembly of section .text.__dummy_fini:

00000204 <_fini>:
 204:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000206 <__funcs_on_exit>:
 206:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000208 <__simulator_exit>:
 208:	08 95       	ret

Disassembly of section .text.exit:

000001cc <exit>:
 1cc:	ec 01       	movw	r28, r24
 1ce:	0e 94 03 01 	call	0x206	; 0x206 <__funcs_on_exit>
 1d2:	0e 94 02 01 	call	0x204	; 0x204 <_fini>
 1d6:	ce 01       	movw	r24, r28
 1d8:	0e 94 04 01 	call	0x208	; 0x208 <__simulator_exit>
 1dc:	ce 01       	movw	r24, r28
 1de:	0e 94 00 01 	call	0x200	; 0x200 <__EEPROM_REGION_LENGTH__>

Disassembly of section .text._Exit:

00000200 <_Exit>:
 200:	0e 94 34 00 	call	0x68	; 0x68 <_exit>
